"Auvik, Connectwise integration in Grafana"
Ajay Bidyarthy
"March 13, 2025"
Client Background
Client: A Leading Tech Firm in the USA
Industry Type: IT & Consulting
"Services: Software, Business Solutions, Consulting"
Organization Size: 200+
Project Objective
"Get statistics such as uptime,  availability, cpu throughput etc. from Auvik and Connectwise and make a dashboard from it in Grafana."
Project Description
"Unlike many technologies for which plugins are readily available in Grafana, there are none for auvik and Connectwise. So our task was to device a solution through which all the data from Auvik and Connectwise can be fed to Grafana. This data then would be used to plot graphs in Grafana."
Our Solution
Setup Postgres on linux
"Create appropriate databases, tables and users in it."
Use python to get data from Auvik and Connectwise and perform necessary preprocesing.
"In the same python file, Connect to our postgres database."
Ingest this data into postgres database.
Setup Grafana.
Connect Grafana to postgres using the postgres plugin.
Query our postgres database in Grafana to get desired results.
Plot multiple graphs according to client’s requirement and make a dashboard from it
Project Deliverables
Setup Postgres
Setup Postrges in Grafana
Write Python code to get data from Auvik and Connectwise into Postrges
Plot graphs into Grafana according to client’s requirement
Make dashboards for all the graphs
Tools used
Grafana
Postgres
Vs Code
AWS
Postman
Language/techniques used
Python
bash
Skills used
Python
networking
Data visualisation
Databases used
Postgres
Web Cloud Servers used
Amazon Web Services (AWS)
What are the technical Challenges Faced during Project Execution
"Since, the data received from Auvik was in Json fromat, our first approach was to use Grafana’s built-in Json plugin. But this wasn’t working since, the data received from Auvik was multi-dimensional when the Json plugin required One dimensional data."
How the Technical Challenges were Solved
The above challenge was addressed by transforming the multi- dimensional data into one dimensional when it was store in a python variable. This transformed data was then inserted into Postgres.
Project Snapshots
https://lh5.googleusercontent.com/UeShNHgGnOlElnNzQwwC5NGed8Pa694c0dtkWUGlT49Vhe0EuguMLYHye2385ysCSnA4BjAdSV-IU5dex1IhsY85KcN_MQONd6weM8YmXKjHuBmReqzR0kBqwmQOoI9yfiqaqCEj8cDoMYZ9Ng
https://lh4.googleusercontent.com/GgfQ_noWt1DljfZJcWvtNLFgyD1EptPYm9e-RoIRq3XqncacXSx3EoYm6UF9C0CGA0flsRLyxYC58-Nrk6dEREiGHk7-sjBTs2FyiiqIrPqac6Zt00BLCM5UtQ-QmoMqzLg3o_j6gmvr4tvkEw
https://lh4.googleusercontent.com/ubTHtHBzQXXvQMAH3vqtRnTFtRTFOMwIVMO4Uq8XGl6heuA1pnaJbwlUwxfg3ceYF5-Q0zc-Lu6O-H5ssiEH_fnvZdG1KscUoOf65yS88jAVkXoeBTeBuyqDyv99_GKL_4qUgVo3k6ugqkZkvQ
https://lh5.googleusercontent.com/EFA0Je-nrefvzwmbyvccS6qqztu86ByziXK4tUv4Akmch0brZlTvUuKOXXuGbMKpTtxPDnVIYQkMIphUDLMH8uqxJJ0LadBFgbVVbfI2p2X2o7UIaFHt_Mh4aNRkfFkPE4v1Gm0f2sTBpzrT_Q
https://lh5.googleusercontent.com/DeNDy-YJAkCljlv8sMDJD6KxqtNkzVEWVYI6TlzJhnqxpIlmA8VcMNZmkjP4d4ZnzrjjNPCpcB8igFdfAvVxslcP2In3c9xQ2Y5wZJCOv2IIwC4uu88EpSspF-G6r6Ee8IDNTcmwBsevpgDVYQ
https://lh4.googleusercontent.com/N9YeTtBuixrpZ6qGUQw7malq9bdkHj3LcgR36n8T5PqzyR82qNpTC0SWO_gVWoaV7dU1Ssn4J5l4SSs9c1008HqbJ1x0aLpxz3kS6Vr7CBjcWdu3wEB377I-F0h9o_7qYzJbfYWj5knltCSLmg
https://lh4.googleusercontent.com/9B0VzqjnqawMMGB5AErLDx-3SRAX5h_sQ88nbgpAe_3lHVP56uUjpnQ1rFq7FQc_LPRZ5ROVGQB_BvIauD89OLtLEJf6Bt7THUE2klPAHkbeg3CVn_SMPPrmRmU9_5q8CIjvoc3fbSA9C_Xehw
https://lh3.googleusercontent.com/ywUBqE-bThjIv2m9pIdULBrSWWahfZDYdIMbspzoJ2zJWETQccUKYJHS1HVt0lzJy8TgwUGViihm1-ZzD0Zk9FEo2-xZTmBgVOJqT5Ge3Td6SgrBc5IxySpeuQQckW2jLGAsD9HemDh-_d1HqQ
https://lh5.googleusercontent.com/YRyDcb-ZcfmSSNBI37coMjittMolehHksNWni3N90WKEzKoGiWJZgNsr4qb-CXVcxM850ia_HaZmUzw4Iqf3yMFMm4kW96ux781d-oICdB2WBibH_LABh6Lyqlt_WqgbY7cusFIJAUBnuAvReQ
Project website url
https://github.com/AjayBidyarthy/Henry-Pardo
Project Video
https://www.youtube.com/watch?v=7CcbdfjkBzc&ab_channel=Blackcoffer
Setup Postgres on linux
"Create appropriate databases, tables and users in it."
Use python to get data from Auvik and Connectwise and perform necessary preprocesing.
"In the same python file, Connect to our postgres database."
Ingest this data into postgres database.
Setup Grafana.
Connect Grafana to postgres using the postgres plugin.
Query our postgres database in Grafana to get desired results.
Plot multiple graphs according to client’s requirement and make a dashboard from it
Setup Postgres
Setup Postrges in Grafana
Write Python code to get data from Auvik and Connectwise into Postrges
Plot graphs into Grafana according to client’s requirement
Make dashboards for all the graphs
