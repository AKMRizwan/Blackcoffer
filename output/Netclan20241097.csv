An agent-based model of a Virtual Power Plant (VPP)
Ajay Bidyarthy
"March 13, 2025"
Client Background
Client: A Leading Energy Firm in the USA
Industry Type: Energy
"Services: Power, Energy, Distribution"
Organization Size: 5000+
Project Objective
To create an agent based model of a virtual power plant in Netlogo. To see the function of multiple such power plants that worked simultaneously. These power plants created and supplied energy based on a demand parameter that can be controlled by the observer
Project Description
The client defined specific requirements as to how he wanted the model to be.
The requirements were divided into 4 parts. Each successive part increased in complexity and required the model to be adjusted or configured to fit that part into it
The entire model when completed contained all the four parts defined by the client in the Statement of work.
Our Solution
Created the model according to requirements.
"The clustering of multiple agents and their position is decided mathematically based on the total number of agents and the sum of their energies. The agents form a cluster based on the condition that the sum of their power is a figure that is above a certain threshold amount, the threshold amount is also decided by the observer."
Project Deliverables
https://github.com/AjayBidyarthy/Shingi-Samudzi-Build-Netlogo-ABM-for-simulating-Virtual-Power-Grid-economics
Above is the github link to every state of the model that was delivered to the client.
The uploads start from a basic model with only clustering of the agents
The final upload is a model that contains the full representation of a VPP for simulation.
Tools used
-Netlogo
– python
Language/techniques used
Netlogo uses a specific language that resembles the logo language but has it’s unique syntax and variations in the way variables are stored and how a list is parsed
Models used
Clustering
Skills used
Netlogo programming
What are the technical Challenges Faced during Project Execution
The major challenge was controlling the behavior of each agent in the model. The lack of understanding of the language and the available resources about it made it challenging to figure out the actual behavior of the agents and the overall model.
The decision to decide where exactly each agent will cluster on the grid was difficult primarily because each agent spawned on a random patch of the screen. This meant that each agent would have to be given a spot to land on and form a cluster with other agents.
The next challenge was deciding the condition on which the agents will cluster as their relative distance to each other couldn’t be used as a parameter as it wasn’t relevant to the model’s purpose.
How the Technical Challenges were Solved
The technical challenges were solved by extensive research and referring to several forums over the span of 2 months.
Project Snapshots
https://lh4.googleusercontent.com/hmuFAsPJldv4mutAWmQ0u9MuOsBhNeYH3EFJdEwM9QWXg-X65SZva98Zg5Jn28fw5CD26USD3LmfJd-za5AfUo9P0m5k-H37O5aqirgWmsywuNu2hvLpT4RztGYAD-211P69ooANxao2vB-R05R6i7jSAMN_Yqy3h6SRaOriVdoWKWQcPPiYYR4FawrlYaobXQNHMQ
https://lh3.googleusercontent.com/IPNHJZp27ruUpeXjbqY0mdQUl5tB_PvS9cK211aOG9rqqCQ80M4THv6QdWqb9gMJmM4J1bm88QjeO22F0-d4YE9oGfGX_Hzmpzdaq21Wu1G-aXP8epVdrU5NmqDq-2TCU_dwnuXPsGi8tAminxOemPlznCQ5MDb5JdX1haSZICq_JXRmTN5hvdmyA6RMfgy1Lr5TxQ
Project Video
https://www.youtube.com/watch?v=1fzCUzZ0q0Q&ab_channel=Blackcoffer
""
The client defined specific requirements as to how he wanted the model to be.
The requirements were divided into 4 parts. Each successive part increased in complexity and required the model to be adjusted or configured to fit that part into it
The entire model when completed contained all the four parts defined by the client in the Statement of work.
Created the model according to requirements.
"The clustering of multiple agents and their position is decided mathematically based on the total number of agents and the sum of their energies. The agents form a cluster based on the condition that the sum of their power is a figure that is above a certain threshold amount, the threshold amount is also decided by the observer."
https://github.com/AjayBidyarthy/Shingi-Samudzi-Build-Netlogo-ABM-for-simulating-Virtual-Power-Grid-economics
Above is the github link to every state of the model that was delivered to the client.
The uploads start from a basic model with only clustering of the agents
The final upload is a model that contains the full representation of a VPP for simulation.
Netlogo uses a specific language that resembles the logo language but has it’s unique syntax and variations in the way variables are stored and how a list is parsed
Clustering
Netlogo programming
The major challenge was controlling the behavior of each agent in the model. The lack of understanding of the language and the available resources about it made it challenging to figure out the actual behavior of the agents and the overall model.
The decision to decide where exactly each agent will cluster on the grid was difficult primarily because each agent spawned on a random patch of the screen. This meant that each agent would have to be given a spot to land on and form a cluster with other agents.
The next challenge was deciding the condition on which the agents will cluster as their relative distance to each other couldn’t be used as a parameter as it wasn’t relevant to the model’s purpose.
The technical challenges were solved by extensive research and referring to several forums over the span of 2 months.
